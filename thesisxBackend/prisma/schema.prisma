generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Otp {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    otp      String
    expireAt  DateTime

    @@map("otp") // Explicitly set the table name as "otp"
}
enum Role {
    STUDENT
    FACULTY
    ADMIN
}
model User{
    id          Int     @id @default(autoincrement())
    email       String  @unique
    password    String
    name        String 
    role        Role
    department  String?
    bio         String?
    image       String?
    verified    Boolean    @default(false)
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt

    faculty     Faculty?
    student     Student?
    @@map("user") // Explicitly set the table name as "user"
}

model Faculty {
  id                Int           @id @default(autoincrement())
  userId            Int           @unique
  researchInterests String[]
  availability      Json?
  publications      Publication[]
  user              User          @relation(fields: [userId], references: [id])

  @@map("faculty")
}

model Student {
  id                Int          @id @default(autoincrement())
  userId            Int          @unique
  researchInterests String[]
  contributions     Contribution[]
  user              User         @relation(fields: [userId], references: [id])

  @@map("student")
}

model Publication {
  id              Int      @id @default(autoincrement())
  title           String
  abstract        String?
  authors         String[]
  publicationDate DateTime
  url             String?
  facultyId       Int
  createdAt       DateTime @default(now())
  faculty         Faculty  @relation(fields: [facultyId], references: [id])

  @@map("publication")
}

model Contribution {
    id              Int      @id @default(autoincrement())
    title           String
    abstract        String?
    authors         String[]
    publicationDate DateTime
    url             String?
    studentId       Int
    createdAt       DateTime @default(now())
    student         Student  @relation(fields: [studentId], references: [id])

}